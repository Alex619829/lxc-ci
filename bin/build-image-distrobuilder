#!/bin/sh -eu
export PATH="/snap/bin/:${PATH}"

cleanup() {
    set +e
    lxc delete build-distrobuilder-cache -f >/dev/null 2>&1

    exit 0
}
trap cleanup EXIT HUP INT TERM

ARCH="$1"
TARGET="$2"

# Create the container
lxc init "images:ubuntu/bionic/${ARCH}" build-distrobuilder-cache \
    -c security.privileged=true -c security.nesting=true

# Setup loop devices
(
    lxc config show build-distrobuilder-cache | sed "/devices:/d"
    cat << EOF
devices:
  loop-control:
    major: "10"
    minor: "237"
    path: /dev/loop-control
    type: unix-char
EOF

    for i in $(seq 0 64); do
        cat << EOF
  loop${i}:
    major: "7"
    minor: "${i}"
    path: /dev/loop${i}
    type: unix-block
EOF
    done
) | lxc config edit build-distrobuilder-cache

# Start the container
lxc start build-distrobuilder-cache

# Install distrobuilder
(
    cat << EOF
#!/bin/sh
set -eux

# Wait for network
while :; do
    ping -W1 -c1 linuxcontainers.org >/dev/null 2>&1 && break
    sleep 1
done

ARCHIVE="http://us.archive.ubuntu.com/ubuntu"
if grep -q ports /etc/apt/sources.list; then
    ARCHIVE="http://us.ports.ubuntu.com/ubuntu-ports"
fi

# Setup clean sources
echo force-unsafe-io >> /etc/dpkg/dpkg.cfg
cat > /etc/apt/sources.list << EOL
deb \${ARCHIVE} bionic main universe restricted multiverse
deb \${ARCHIVE} bionic-updates main universe restricted multiverse
deb \${ARCHIVE} bionic-security main universe restricted multiverse
deb \${ARCHIVE} bionic-backports main universe restricted multiverse
EOL
apt-get update --yes

# Install dependencies
apt-get install --yes --no-install-recommends \
    build-essential btrfs-progs golang-go git ca-certificates gcc libc6-dev \
    debootstrap xz-utils squashfs-tools gpg dirmngr gpg-agent rsync kpartx \
    python subversion patch build-essential gawk libncurses-dev unzip
apt-get clean
export PATH=/root/go/bin:\${PATH}
export GOPATH=/root/go/

# Install distrobuilder
go get -v -x github.com/lxc/distrobuilder/distrobuilder
EOF
) | lxc exec build-distrobuilder-cache -- sh

lxc stop build-distrobuilder-cache
lxc export build-distrobuilder-cache "${TARGET}/build-distrobuilder-cache.tar.xz"
lxc delete -f build-distrobuilder-cache
