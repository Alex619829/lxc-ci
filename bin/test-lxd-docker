#!/bin/sh -eux
CNAME="docker-$(uuidgen)"

cleanup() {
    lxc delete --force "${CNAME}"
}

trap cleanup EXIT HUP INT TERM

# Create the container
lxc launch images:ubuntu/xenial "${CNAME}" -c security.nesting=true "$@"

# Wait for network
DNS=0

# shellcheck disable=SC2034
for i in $(seq 30); do
    sleep 1
    ! lxc exec "${CNAME}" -- cat /etc/resolv.conf 2>/dev/null | grep -q nameserver && continue

    DNS=1
    break
done

[ "${DNS}" = "0" ] && echo "Container failed to come online" && exit 1

(
cat << EOF
# Install distro docker
apt update --yes --force-yes
apt install docker.io wget --yes --force-yes

# Stop the distro docker
systemctl stop docker.service
systemctl stop docker.socket

# Download binaries built from current git head of the Docker repo.
for BIN in docker dockerd docker-containerd docker-containerd-shim docker-init docker-proxy docker-runc; do
    wget -q "https://master.dockerproject.org/linux/x86_64/${BIN}" -O "/usr/bin/${BIN}" && \
        chmod +x "/usr/bin/${BIN}"
done

# Start docker again
systemctl start docker
sleep 5

# Test whether we can pull a simple Docker image.
docker pull busybox:latest

# Test whether we can remove a simple Docker image.
docker rmi busybox:latest

# Show docker info (client and daemon version, etc.)
docker info

# Run a basic hello-world
docker run hello-world
EOF
) | lxc exec "${CNAME}" -- sh -eux
