#!/bin/sh
set -eu

series=${1:-xenial-updates}
track=${2:-latest}
channel=${3:-stable}

export DEBIAN_FRONTEND=noninteractive

cleanup() {
    if [ "${FAIL}" = "1" ]; then
        echo ""
        echo "Test failed"
        exit 1
    fi
}

launch() {
    if [ "${series}" = "trusty-backports" ] || [ "${series}" = "xenial-updates" ]; then
        lxc launch images:alpine/edge "${1}"
    else
        lxc launch images:alpine/edge "${1}" -n lxdbr0 -s "${2}"
    fi
}

FAIL=0
trap cleanup EXIT HUP INT TERM

# Make sure we're up to date
while :; do
    apt update && break
    sleep 10
done

while :; do
    apt dist-upgrade --yes && break
    sleep 10
done

# Install the LXD deb
apt install -t "${series}" lxd lxd-client jq --yes
if [ "${series}" = "trusty-backports" ]; then
    apt install snapd --yes
else
    apt install zfsutils-linux thin-provisioning-tools --yes
fi

# Configure the LXD deb
if [ "${series}" = "trusty-backports" ] || [ "${series}" = "xenial-updates" ]; then
    # LXD 2.0
    lxd waitready --timeout=120
    if [ "${series}" != "trusty-backports" ]; then
        lxd init --auto --storage-backend=zfs --storage-create-loop=10 --storage-pool=lxd
    fi

    (
    cat << EOF
USE_LXD_BRIDGE=true
LXD_BRIDGE=lxdbr0
UPDATE_PROFILE=true
LXD_CONFILE=
LXD_DOMAIN=lxd
LXD_IPV4_ADDR=10.0.3.1
LXD_IPV4_NETMASK=255.255.255.0
LXD_IPV4_NETWORK=10.0.3.0/24
LXD_IPV4_DHCP_RANGE=10.0.3.2,10.0.3.254
LXD_IPV4_DHCP_MAX=250
LXD_IPV4_NAT=true
LXD_IPV6_ADDR=2001:470:b368:4242::1
LXD_IPV6_MASK=64
LXD_IPV6_NETWORK=2001:470:b368:4242::/64
LXD_IPV6_NAT=true
LXD_IPV6_PROXY=false
EOF
    ) > /etc/default/lxd-bridge
    if [ "${series}" = "trusty-backports" ]; then
        stop lxd
        start lxd
    else
        systemctl restart lxd-bridge
    fi

    lxd waitready --timeout=120
else
    # LXD 2.x
    lxd waitready --timeout=120

    # Base configuration
    lxc network create lxdbr0
    lxc storage create dir dir source=/mnt
    lxc storage create zfs zfs
    lxc storage create lvm lvm
    lxc storage create btrfs btrfs
fi

# Create some containers
launch c1 dir
launch c2 zfs
launch c3 lvm
launch c4 btrfs

# Pre-migration listing
sleep 30
lxc list

# Install the LXD snap
if [ "${track}" = "latest" ]; then
    snapd_channel=${channel}
else
    snapd_channel=${track}/${channel}
fi

snap install lxd --channel="${snapd_channel}"
export PATH="/snap/bin/:${PATH}"
lxd waitready --timeout=120

# Run the migration
lxd.migrate --yes

# Show a new listing
sleep 30
lxc list

# Check that all containers have an IPv4 and IPv6 address
FAIL=0
for url in $(lxc query "/1.0/containers" | jq -r .[]); do
    address=$(lxc query "${url}/state" | jq -r ".network.eth0.addresses | .[] | select(.scope | contains(\"global\")) | .address")
    name=$(echo "${url}" | cut -d/ -f4)
    echo ""

    # IPv4
    if echo "${address}" | grep "\." -q; then
        echo "PASS-IPv4: ${name}"
    else
        echo "FAIL-IPv4: ${name}"
        FAIL=1
    fi

    # IPv6
    if echo "${address}" | grep ":" -q; then
        echo "PASS-IPv6: ${name}"
    else
        echo "FAIL-IPv6: ${name}"
        FAIL=1
    fi
done
