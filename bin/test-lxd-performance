#!/bin/sh
set -eu

export DEBIAN_FRONTEND=noninteractive

cleanup() {
    if [ "${FAIL}" = "1" ]; then
        echo ""
        echo "Test failed"
        exit 1
    fi
}

FAIL=1
trap cleanup EXIT HUP INT TERM

# Make sure we're up to date
while :; do
    apt update && break
    sleep 10
done

while :; do
    apt dist-upgrade --yes && break
    sleep 10
done

# Setup the environment
export LXD_BACKEND=$1
apt remove --purge lxd lxd-client --yes
apt install golang-1.9 libacl1-dev libsqlite3-dev lxc-dev sqlite3 zfsutils-linux lvm2 thin-provisioning-tools btrfs-tools ceph-common --yes
export PATH=/usr/lib/go-1.9/bin/:${PATH}

# Setup storage
mkdir /root/go
mkfs.ext4 -F /dev/sde
mount /dev/sde /root/go

# Configure ceph
if [ "${LXD_BACKEND}" = "ceph" ]; then
    (
cat << EOF
[global]
mon_initial_members = ceph01
mon_host = [2001:470:b0f8:1015:216:3eff:fe52:5748]
EOF
    ) > /etc/ceph/ceph.conf

    (
cat << EOF
[client.admin]
    key = AQDxu3dZ8yh8KxAAa5Vlk9kWSD0aCIR7FNGnJQ==
EOF
    ) > /etc/ceph/ceph.client.admin.keyring

    export LXD_CEPH_CLUSTER=ceph
fi

# Build LXD
export GOPATH=/root/go
go get -v -tags libsqlite3 github.com/lxc/lxd/lxc
go get -v -tags libsqlite3 github.com/lxc/lxd/lxd
go get -v -tags libsqlite3 github.com/lxc/lxd/lxd-benchmark

# Run the tests
chmod +x /root
cd /root/go/src/github.com/lxc/lxd/test/
./perf.sh
tar -zcf /home/ubuntu/artifacts.tar.gz perf.csv

FAIL=0
