#!/bin/sh
set -eux

# Source host information
# shellcheck disable=SC1091
[ -e "/etc/os-release" ] && . /etc/os-release

track=${1:-latest}
channel=${2:-stable}

export PATH="${PATH}:/var/lib/snapd/snap/bin:/snap/bin"

RET=1
cleanup() {
    set +e
    echo "==> Cleaning up"
    for container in $(lxc list --fast | tail -n+3 | grep "^| " | cut -d' ' -f2); do
        lxc delete "${container}" -f || true
    done

    for image in $(lxc image list | tail -n+3 | grep "^| " | cut -d'|' -f3 | sed "s/^ //g"); do
        lxc image delete "${image}" || true
    done

    for profile in $(lxc profile list | tail -n+3 | grep "^| " | cut -d' ' -f2); do
        lxc profile delete "${profile}" || true
    done

    if [ "${track}" = "2.0" ]; then
        [ -e /sys/class/net/lxdbr0 ] && ip link del lxdbr0
    else
        for network in $(lxc network list | grep YES | grep "^| " | cut -d' ' -f2); do
            lxc network delete "${network}" || true
        done

        for storage in $(lxc storage list | tail -n+3 | grep "^| " | cut -d' ' -f2); do
            lxc storage delete "${storage}" || true
        done
    fi

    echo "==> Removing LXD"
    snap remove lxd
    pkill -x -9 lxd
    pkill -x -9 dnsmasq

    if [ "${RET}" = "0" ]; then
        echo ""
        echo "==> Test passed"
        exit 0
    fi

    echo ""
    echo "==> Test failed"
    exit "${RET}"
}
trap cleanup EXIT HUP INT TERM

if [ "${track}" = "latest" ]; then
    snapd_channel=${channel}
else
    snapd_channel=${track}/${channel}
fi

echo "==> Installing LXD snap from ${track}/${channel}"
snap remove lxd || true
snap install lxd --channel="${snapd_channel}"

# shellcheck disable=SC2034
for i in $(seq 12); do
    lxd waitready --timeout=10 >/dev/null 2>&1 && break
done

lxc --version

# LXD setup
if [ "${track}" = "2.0" ]; then
    (
    cat << EOF
USE_LXD_BRIDGE="true"
LXD_BRIDGE="lxdbr0"
LXD_DOMAIN="lxd"

LXD_IPV4_ADDR="10.214.179.1"
LXD_IPV4_NETMASK="255.255.255.0"
LXD_IPV4_NETWORK="10.99.58.1/24"
LXD_IPV4_DHCP_RANGE="10.214.179.2,10.214.179.254"
LXD_IPV4_DHCP_MAX="252"
LXD_IPV4_NAT="true"

LXD_IPV6_ADDR="fdc9:2f0d:62bc:1953::1"
LXD_IPV6_MASK="64"
LXD_IPV6_NETWORK="fd42:4e5a:ccbc:ef6e::1/64"
LXD_IPV6_NAT="true"
EOF
    ) > /var/snap/lxd/common/lxd-bridge/config
else
    lxc storage create default dir
    lxc profile device add default root disk pool=default path=/

    lxc network create lxdbr0
    lxc profile device add default eth0 nic nictype=bridged parent=lxdbr0 name=eth0

    snap set lxd ceph.builtin=true
fi

systemctl restart snap.lxd.daemon.service

# shellcheck disable=SC2034
for i in $(seq 12); do
    lxd waitready --timeout=10 >/dev/null 2>&1 && break
done

# Check that user access works
if [ "${ID}" != "ubuntu-core" ]; then
    (
        set -e
        usermod -G lxd -a jenkins || true
        LXC=$(which lxc)
        su jenkins -c "${LXC} info"
    )
fi

# Container creation test
lxc launch images:alpine/edge unprivileged
lxc launch images:alpine/edge privileged -c security.privileged=true
lxc launch images:alpine/edge isolated -c security.idmap.isolated=true

# Storage backends test
if [ "${track}" != "2.0" ]; then
    if modprobe -q -n btrfs; then
        lxc storage create test-btrfs btrfs
        lxc launch images:alpine/edge -s test-btrfs btrfs
    fi

    if modprobe -q -n zfs; then
        lxc storage create test-zfs zfs
        lxc launch images:alpine/edge -s test-zfs zfs
    fi

    if [ "${ID}" != "ubuntu-core" ] && [ "${ID}" != "elementary" ] && modprobe -q -n dm_mod; then
        lxc storage create test-lvm lvm volume.size=25MB
        lxc launch images:alpine/edge -s test-lvm lvm
    fi

    if [ "${ID}" != "centos" ] && modprobe -q -n rbd; then
        (
cat << EOF
[global]
mon_initial_members = ceph01
mon_host = [2001:470:b0f8:1015:216:3eff:fe52:5748]
EOF
        ) > /var/snap/lxd/common/ceph/ceph.conf

        (
cat << EOF
[client.admin]
    key = AQDxu3dZ8yh8KxAAa5Vlk9kWSD0aCIR7FNGnJQ==
EOF
        ) > /var/snap/lxd/common/ceph/ceph.client.admin.keyring

        lxc storage create test-ceph ceph "ceph.osd.pool_name=$(mktemp -u snaptest-XXX)" volume.size=25MB ceph.osd.pg_num=1
        lxc launch images:alpine/edge -s test-ceph ceph
    fi
fi

sleep 10
lxc list

RET=0
