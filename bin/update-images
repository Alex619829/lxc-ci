#!/bin/sh -eu
export PATH="/snap/bin/:${PATH}"

[ -e /lxc-ci/etc/config ] && . /lxc-ci/etc/config

cleanup() {
    set +e
    lxc delete build-distrobuilder-cache -f >/dev/null 2>&1
    lxc delete build-lxc-cache -f >/dev/null 2>&1

    [ -e /proc/sys/vm/highmem_is_dirtyable ] && echo 0 > /proc/sys/vm/highmem_is_dirtyable
    exit 0
}
trap cleanup EXIT HUP INT TERM

# Wait for network
while :; do
    ping -W1 -c1 jenkins01.srv.mtl.stgraber.net >/dev/null 2>&1 && break
    sleep 1
done

# Make sure LXD is functional
lxc delete update-images -f >/dev/null 2>&1 || true
lxc init update-images --empty --quiet
lxc delete -f update-images

# Avoid conflicting with an in progress build.
while :; do
    pgrep build-image || break
    sleep 5m
done

HOST="http://jenkins01.srv.mtl.stgraber.net:8080"

build_distrobuilder() {
    if [ "${DISTROBUILDER_ARCHES:-}" = "" ]; then
        return
    fi

    for arch in ${DISTROBUILDER_ARCHES}; do
        lxc delete -f build-distrobuilder-cache >/dev/null 2>&1 || true
        curl -s "${HOST}/job/lxc-ci-artifacts/architecture=${arch},artifact=distrobuilder-image,restrict=vm,variant=default/lastSuccessfulBuild/artifact/build-distrobuilder-cache.tar.xz" | lxc import /dev/stdin --quiet
        lxc delete -f "cache-distrobuilder-${arch}" >/dev/null 2>&1 || true
        lxc move build-distrobuilder-cache "cache-distrobuilder-${arch}"
    done
}

build_lxc() {
    if [ "${LXC_ARCHES:-}" = "" ]; then
        return
    fi

    for arch in ${LXC_ARCHES}; do
        lxc delete -f build-lxc-cache >/dev/null 2>&1 || true
        curl -s "${HOST}/job/lxc-ci-artifacts/architecture=${arch},artifact=lxc-image,restrict=vm,variant=default/lastSuccessfulBuild/artifact/build-lxc-cache.tar.xz" | lxc import /dev/stdin --quiet
        lxc delete -f "cache-lxc-${arch}" >/dev/null 2>&1 || true
        lxc move build-lxc-cache "cache-lxc-${arch}"
    done
}

[ -e /proc/sys/vm/highmem_is_dirtyable ] && echo 1 > /proc/sys/vm/highmem_is_dirtyable
build_distrobuilder
build_lxc

exit 0
